{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,wCAAwC;AACxC,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,eAAe,CAAC;AAIvB,wCAAwC;AACxC,4BAA4B;AAC5B,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,eAAe;IACjC,MAAM,GAAG,GAAG;;;;;;;;;;;;;;;;KAgBX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAID,wCAAwC;AACxC,yBAAyB;AACzB,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG;;;;;;;;;KASX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAID,wCAAwC;AACxC,8BAA8B;AAC9B,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACnC,MAAM,GAAG,GAAG;;;;;KAKX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAID,qFAAqF;AACjF,qEAAqE;AACrE,2EAA2E;AAC3E,oBAAoB;AACpB,sDAAsD;AACtD,8BAA8B;AAC9B,SAAS;AAET,4EAA4E;AAC5E,yDAAyD;AACzD,IAAI;AAGR,wCAAwC;AACxC,6BAA6B;AAC7B,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,EAAU,EAAE,IAAY;IAC3D,MAAM,GAAG,GAAG;;;KAGX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AACxC,CAAC;AAID,wCAAwC;AACxC,uBAAuB;AACvB,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,EAAU,EAAE,KAAa,EAAE,aAAqB,EAAE,MAAc;IAC7F,MAAM,GAAG,GAAG;;;KAGX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;AAChE,CAAC;AAID,wCAAwC;AACxC,2BAA2B;AAC3B,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,EAAU,EAAE,UAAkB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAkB;IACvH,MAAM,GAAG,GAAG;;;KAGX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;AAC9E,CAAC","sourcesContent":["// IMPORTS -----------------------------\r\nimport client from '../config/connection.js';\r\nimport 'console.table';\r\n\r\n\r\n\r\n// -------------------------------------\r\n// DISPLAY EMPLOYEE FUNCTION\r\n// -------------------------------------\r\nexport async function getAllEmployees() {\r\n    const sql = `\r\n    SELECT \r\n        employee.id AS id,\r\n        employee.first_name,\r\n        employee.last_name,\r\n        title,\r\n        name AS department,\r\n        salary,\r\n        CONCAT(manager.first_name, ' ', manager.last_name) AS manager\r\n    FROM employee\r\n    JOIN role\r\n        ON employee.role_id = role.id\r\n    JOIN department  \r\n        ON role.department_id = department.id\r\n    LEFT JOIN employee as manager \r\n        ON employee.manager_id = manager.id\r\n    `;\r\n\r\n    const { rows } = await client.query(sql);\r\n\r\n    return rows;\r\n}\r\n\r\n\r\n\r\n// -------------------------------------\r\n// DISPLAY ROLES FUNCTION\r\n// -------------------------------------\r\nexport async function getAllRoles() {\r\n    const sql = `\r\n    SELECT \r\n        role.id AS id,\r\n        title,\r\n        name AS department,\r\n        salary\r\n        FROM role\r\n    JOIN department  \r\n        ON role.department_id = department.id\r\n    `;\r\n    \r\n    const { rows } = await client.query(sql);\r\n    \r\n    return rows;\r\n}\r\n\r\n\r\n\r\n// -------------------------------------\r\n// DISPLAY DEPARTMENT FUNCTION\r\n// -------------------------------------\r\nexport async function getAllDepartments() {\r\n    const sql = `\r\n    SELECT \r\n        department.id AS id,\r\n        name AS department\r\n    FROM department\r\n    `;\r\n\r\n    const { rows } = await client.query(sql);\r\n\r\n    return rows;\r\n}\r\n\r\n\r\n\r\n// export async function createShop(user_id: number, name: string, address: string) {\r\n    //     //Doing this with ${name} can cause issues with sql injection \r\n    //     //So we're using placeholders for now, and will input values later  \r\n    //     const sql = `\r\n    //         INSERT INTO shops (name, address, user_id) \r\n    //         VALUES ($1, $2, $3)\r\n    //     `;\r\n    \r\n    //     // this will input the values in order, into the 'prepared statement'\r\n    //     await client.query(sql, [name, address, user_id]);\r\n    // }\r\n\r\n    \r\n// -------------------------------------\r\n// CREATE DEPARTMENT FUNCTION\r\n// -------------------------------------\r\nexport async function createDepartment(id: number, name: string) {\r\n    const sql = `\r\n        INSERT INTO department (id, name)\r\n        VALUES ($1, $2)\r\n    `;\r\n\r\n    await client.query(sql, [id, name]);\r\n}\r\n\r\n\r\n\r\n// -------------------------------------\r\n// CREATE ROLE FUNCTION\r\n// -------------------------------------\r\nexport async function createRole(id: number, title: string, department_id: string, salary: number) {\r\n    const sql = `\r\n        INSERT INTO role (id, title, department_id, salary)\r\n        VALUES ($1, $2, $3, $4)\r\n    `;\r\n\r\n    await client.query(sql, [id, title, department_id, salary]);\r\n}\r\n\r\n\r\n\r\n// -------------------------------------\r\n// CREATE EMPLOYEE FUNCTION\r\n// -------------------------------------\r\nexport async function createEmployee(id: number, first_name: string, last_name: string, role_id: number, manager_id: number) {\r\n    const sql = `\r\n        INSERT INTO employee (id, first_name, last_name, role_id, manager_id)\r\n        VALUES ($1, $2, $3, $4, $5)\r\n    `;\r\n\r\n    await client.query(sql, [id, first_name, last_name, role_id, manager_id]);\r\n}"]}