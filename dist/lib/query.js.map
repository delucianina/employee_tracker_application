{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,eAAe,CAAC;AAIvB,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG;;;;;;;;;;;;;;;;;;;;;KAqBX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAKD,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG;;;;;KAKX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,OAAO,IAAI,CAAC;AAChB,CAAC;AAMD,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,OAAe,EAAE,IAAY,EAAE,OAAe;IAC3E,8DAA8D;IAC9D,oEAAoE;IACpE,MAAM,GAAG,GAAG;;;KAGX,CAAC;IAEF,qEAAqE;IACrE,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AACtD,CAAC","sourcesContent":["import client from '../config/connection.js';\r\nimport 'console.table';\r\n\r\n\r\n\r\nexport async function getAllShops() {\r\n    const sql = `\r\n    SELECT \r\n        shops.id AS shop_id,\r\n        name AS shop_name, \r\n        address AS shop_address,\r\n        users.id AS user_id,\r\n        CONCAT(users.first_name, ' ', users.last_name) AS user_name,\r\n        users.email AS user_email,\r\n        CONCAT(managers.first_name, ' ', managers.last_name) AS manager,\r\n        wines.id AS wine_id,\r\n        brand AS wine_brand,\r\n        type AS wine_type,\r\n        region AS wine_region,\r\n        price AS wine_price\r\n    FROM shops \r\n    JOIN users\r\n        ON shops.user_id = users.id\r\n    LEFT JOIN wines \r\n        ON shops.id = wines.shop_id\r\n    LEFT JOIN users as managers \r\n        ON users.manager_id = managers.id\r\n    `;\r\n\r\n    const { rows } = await client.query(sql);\r\n\r\n    return rows;\r\n}\r\n\r\n\r\n\r\n\r\nexport async function getAllUsers() {\r\n    const sql = `\r\n    SELECT \r\n        id, \r\n        CONCAT(first_name, ' ', last_name) AS user_name\r\n    FROM users  \r\n    `;\r\n\r\n    const {rows} = await client.query(sql);\r\n\r\n    return rows;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport async function createShop(user_id: number, name: string, address: string) {\r\n    //Doing this with ${name} can cause issues with sql injection \r\n    //So we're using placeholders for now, and will input values later  \r\n    const sql = `\r\n        INSERT INTO shops (name, address, user_id) \r\n        VALUES ($1, $2, $3)\r\n    `;\r\n\r\n    // this will input the values in order, into the 'prepared statement'\r\n    await client.query(sql, [name, address, user_id]);\r\n}"]}