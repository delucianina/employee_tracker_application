{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import inquirer from 'inquirer';\r\nimport 'console.table';\r\n\r\nimport { getAllDepartments, getAllRoles, getAllEmployees, createDepartment, createRole, createEmployee, updateEmployeeTable } from './query.js';\r\n\r\nlet showWelcome = false;\r\n\r\n\r\n//-------------------------------------\r\n//ADDING A SHOP FUNCTION\r\n//-------------------------------------\r\n// export async function addShop() {\r\n//     const usersArray = await getAllUsers();\r\n//     const {user_id, name, address} = await inquirer.prompt([\r\n//         {\r\n//             message: 'Please select the owner of the shop:',\r\n//             name: 'user_id',\r\n//             type: 'list',\r\n//             choices: usersArray.map((userObj) => {\r\n//                 return {\r\n//                     name: userObj.user_name,\r\n//                     value: userObj.id\r\n//                 }\r\n//             })\r\n//         },\r\n//         {\r\n//             message: 'Enter the shop name:',\r\n//             name: 'name',\r\n//             type: 'input'\r\n//         },\r\n//         {\r\n//             message: 'Enter the shop address:',\r\n//             name: 'address',\r\n//             type: 'input'\r\n//         }\r\n//     ])\r\n\r\n//     await createShop(user_id, name, address);\r\n//     console.log('\\nShop created successfully\\n');\r\n// }\r\n//-------------------------------------\r\n//UPDATING AN EMPLOYEE FUNCTION\r\n//-------------------------------------\r\nexport async function updateEmployee() {\r\n    const employeesArray = await getAllEmployees();\r\n    const rolesArray = await getAllRoles();\r\n    const {role_id, id} = await inquirer.prompt([\r\n        // select an employee to update\r\n        {\r\n            message: 'Which employee\\'s role would you like to update?',\r\n            name: 'id',\r\n            type: 'list',\r\n            choices: employeesArray.map((userObj) => {\r\n                return {\r\n                    name: userObj.id,\r\n                    value: userObj.id\r\n                }\r\n            })\r\n        },\r\n        //choose a role \r\n        {\r\n            message: 'What role would you like to assign to them?',\r\n            name: 'role_id',\r\n            type: 'list',\r\n            choices: rolesArray.map((userObj) => {\r\n                return {\r\n                    name: userObj.id,\r\n                    value: userObj.id\r\n                }\r\n            })\r\n        }\r\n    ])\r\n    await updateEmployeeTable(role_id, id);\r\n    console.log('\\nEmployee updated successfully\\n');\r\n}\r\n\r\n\r\n\r\n\r\n//-------------------------------------\r\n//SHOWING ALL EMPLOYEES FUNCTION\r\n//-------------------------------------\r\nexport async function showAllEmployees() {\r\n    const employeeRowsArray = await getAllEmployees();\r\n    console.table(employeeRowsArray);\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//SHOWING ALL ROLES FUNCTION\r\n//-------------------------------------\r\nexport async function showAllRoles() {\r\n    const rolesRowsArray = await getAllRoles();\r\n    console.table(rolesRowsArray);\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//SHOWING ALL DEPARTMENTS FUNCTION\r\n//-------------------------------------\r\nexport async function showAllDepartments() {\r\n    const departmentsRowsArray = await getAllDepartments();\r\n    console.table(departmentsRowsArray);\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//ADDING A DEPARTMENT FUNCTION\r\n//-------------------------------------\r\nexport async function addDepartment() {\r\n    const {id, name} = await inquirer.prompt([\r\n        {\r\n            message: 'Please input the id number of the new department:',\r\n            name: 'id',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the name of the new department:',\r\n            name: 'name',\r\n            type: 'input'\r\n        }\r\n    ])\r\n\r\n    await createDepartment(id, name);\r\n    console.log('\\nDepartment created successfully.\\n');\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//ADDING A ROLE FUNCTION\r\n//-------------------------------------\r\nexport async function addRole() {\r\n    const {id, title, department_id, salary} = await inquirer.prompt([\r\n        {\r\n            message: 'Please input the new role\\'s id number:',\r\n            name: 'id',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new role\\'s title:',\r\n            name: 'title',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new role\\'s department id:',\r\n            name: 'department_id',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new role\\'s salary:',\r\n            name: 'salary',\r\n            type: 'input'\r\n        }\r\n    ])\r\n\r\n    await createRole(id, title, department_id, salary);\r\n    console.log('\\nRole created successfully.\\n');\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//ADDING A EMPLOYEE FUNCTION\r\n//-------------------------------------\r\nexport async function addEmployee() {\r\n    const {id, first_name, last_name, role_id, manager_id} = await inquirer.prompt([\r\n        {\r\n            message: 'Please input the new employee\\'s id number:',\r\n            name: 'id',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new employee\\'s first name:',\r\n            name: 'first_name',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new employee\\'s last name:',\r\n            name: 'last_name',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new employee\\'s role id number:',\r\n            name: 'role_id',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Please input the new employee\\'s manager id number:',\r\n            name: 'manager_id',\r\n            type: 'input'\r\n        }\r\n    ])\r\n\r\n    await createEmployee(id, first_name, last_name, role_id, manager_id);\r\n    console.log('\\nEmployee created successfully.\\n');\r\n}\r\n\r\n\r\n\r\n//-------------------------------------\r\n//MENU FUNCTION\r\n//-------------------------------------\r\nexport async function showMainMenu() {\r\n    if (!showWelcome) {\r\n        console.log('\\n----- Welcome To The Employee Tracker App -----\\n');\r\n        showWelcome = true;\r\n    }\r\n    const { optionFunction } = await inquirer.prompt({\r\n        message: 'Please select an option:',\r\n        name: 'optionFunction',\r\n        type: 'list',\r\n        choices: [\r\n        {\r\n            name: 'View All Departments',\r\n            value: showAllDepartments\r\n        },\r\n        {\r\n            name: 'View All Roles',\r\n            value: showAllRoles\r\n        },\r\n        {\r\n            name: 'View All Employees',\r\n            value: showAllEmployees\r\n        },\r\n        {\r\n            name: 'Add a Department',\r\n            value: addDepartment\r\n        },\r\n        {\r\n            name: 'Add a Role',\r\n            value: addRole\r\n        },\r\n        {\r\n            name: 'Add an Employee',\r\n            value: addEmployee\r\n        },\r\n        {\r\n            name: 'Update an Employee Role',\r\n            value: updateEmployee\r\n        },\r\n        {\r\n            name: 'Quit',\r\n            value: 0\r\n        }\r\n    ]\r\n    });\r\n\r\n    if (!optionFunction) {\r\n        console.log('\\nThanks for using the app!\\n');\r\n        process.exit();   //will [CTRL + C] the terminal \r\n    }\r\n\r\n    await optionFunction();\r\n\r\n    showMainMenu();\r\n\r\n}\r\n\r\n\r\n"]}